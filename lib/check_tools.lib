# Copyright (C) 2019,2020 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the “License”);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

################################################################################
# NAME
#   check_tools - set some variables according to the available tools on the target system
# SYNOPSIS
#   check_tools
################################################################################
check_tools() {

    # each command needs to be tested individually as some systems do not have 'type' or 'which' tool

    # find available MD5 sum tool
    MD5SUM_TOOL=""
    logging D "Selecting the best available MD5 hashing tool\n"
    run_command "echo \"uac\" | md5sum" "/dev/null"
    if [ $? -eq 0 ]; then
        MD5SUM_TOOL="md5sum"
    else
        run_command "echo \"uac\" | md5" "/dev/null"
        if [ $? -eq 0 ]; then
            MD5SUM_TOOL="md5"
        else
            run_command "echo \"uac\" | digest -v -a md5" "/dev/null"
            if [ $? -eq 0 ]; then
                MD5SUM_TOOL="digest -v -a md5"
            else
                run_command "csum -h MD5 \"$CWD/uac\"" "/dev/null"
                if [ $? -eq 0 ]; then
                    MD5SUM_TOOL="csum -h MD5"
                fi
            fi
        fi
    fi
    logging D "MD5SUM_TOOL: $MD5SUM_TOOL\n"

    # find available SHA1 sum tool
    SHA1SUM_TOOL=""
    logging D "Selecting the best available SHA1 hashing tool\n"
    run_command "echo \"uac\" | sha1sum" "/dev/null"
    if [ $? -eq 0 ]; then
        SHA1SUM_TOOL="sha1sum"
    else
        run_command "echo \"uac\" | shasum" "/dev/null"
        if [ $? -eq 0 ]; then
            SHA1SUM_TOOL="shasum"
        else
            run_command "echo \"uac\" | sha1" "/dev/null"
            if [ $? -eq 0 ]; then
                SHA1SUM_TOOL="sha1"
            else
                run_command "echo \"uac\" | digest -v -a sha1" "/dev/null"
                if [ $? -eq 0 ]; then
                    SHA1SUM_TOOL="digest -v -a sha1"
                else
                    run_command "csum -h SHA1 \"$CWD/uac\"" "/dev/null"
                    if [ $? -eq 0 ]; then
                        SHA1SUM_TOOL="csum -h SHA1"
                    fi
                fi
            fi
        fi
    fi
    logging D "SHA1SUM_TOOL: $SHA1SUM_TOOL\n"

    # check if tar tool is available
    TAR_TOOL_AVAILABLE=false
    logging D "Checking if tar tool is available on the target system\n"
    run_command "tar -cf - \"${CWD}/uac\"" "/dev/null"
    if [ $? -eq 0 ]; then
        TAR_TOOL_AVAILABLE=true
    fi
    logging D "TAR_TOOL_AVAILABLE: ${TAR_TOOL_AVAILABLE}\n"

    # check if gzip tool is available
    GZIP_TOOL_AVAILABLE=false
    logging D "Checking if gzip tool is available on the target system\n"
    run_command "echo \"uac\" | gzip" "/dev/null"
    if [ $? -eq 0 ]; then
        GZIP_TOOL_AVAILABLE=true
    fi
    logging D "GZIP_TOOL_AVAILABLE: ${GZIP_TOOL_AVAILABLE}\n"
   
    # check if perl is available
    PERL_TOOL_AVAILABLE=false
    logging D "Checking if perl is available\n"
    run_command "perl \"$CWD/tools/stat.pl/stat.pl\"" "/dev/null"
    if [ $? -eq 0 ]; then
        PERL_TOOL_AVAILABLE=true
    fi
    logging D "PERL_TOOL_AVAILABLE: $PERL_TOOL_AVAILABLE\n"
    
    # check if stat is available
    STAT_TOOL_AVAILABLE=false
    STAT_BTIME_SUPPORT=false
    logging D "Checking if stat is available\n"
    if run_command "stat \"$MOUNT_POINT\"" "/dev/null"; then
        STAT_TOOL_AVAILABLE=true
        case "$PROFILE" in
            "bsd")
                logging D "Checking if stat collects btime\n"
                if run_command "stat -f \"0|%N%SY|%i|%Sp|%u|%g|%z|%a|%m|%c|%B\" \"$MOUNT_POINT\" | grep -q -E \"\|[0-9]{2,}$\""; then
                    STAT_BTIME_SUPPORT=true
                fi
                ;;
            "linux"|"solaris")
                logging D "Checking if stat collects btime\n"
                if run_command "stat -c \"0|%N|%i|%A|%u|%g|%s|%X|%Y|%Z|%W\" \"$MOUNT_POINT\" | grep -q -E \"\|[0-9]{2,}$\""; then
                    STAT_BTIME_SUPPORT=true
                fi
                ;;
        esac
    fi
    logging D "STAT_TOOL_AVAILABLE: $STAT_TOOL_AVAILABLE\n"
    logging D "STAT_BTIME_SUPPORT: $STAT_BTIME_SUPPORT\n"

    STATX_TOOL_AVAILABLE=false
    if [ "$PROFILE" = "linux" ]; then
        logging D "Checking if statx is available\n"
        # remove existing symlink
        if [ -L "${CWD}/tools/statx/bin/statx" ]; then
            rm -f "${CWD}/tools/statx/bin/statx"
        fi

        if run_command "\"${CWD}/tools/statx/bin/linux/statx_x86_64\" \"${MOUNT_POINT}\"" "/dev/null"; then
            ln -s "${CWD}/tools/statx/bin/linux/statx_x86_64" \
                "${CWD}/tools/statx/bin/statx"
            STATX_TOOL_AVAILABLE=true
        elif run_command "\"${CWD}/tools/statx/bin/linux/statx_i686\" \"${MOUNT_POINT}\"" "/dev/null"; then
            ln -s "${CWD}/tools/statx/bin/linux/statx_i686" \
                "${CWD}/tools/statx/bin/statx"
            STATX_TOOL_AVAILABLE=true
        elif run_command "\"${CWD}/tools/statx/bin/linux/statx_aarch64\" \"${MOUNT_POINT}\"" "/dev/null"; then
            ln -s "${CWD}/tools/statx/bin/linux/statx_aarch64" \
                "${CWD}/tools/statx/bin/statx"
            STATX_TOOL_AVAILABLE=true
        elif run_command "\"${CWD}/tools/statx/bin/linux/statx_arm\" \"${MOUNT_POINT}\"" "/dev/null"; then
            ln -s "${CWD}/tools/statx/bin/linux/statx_arm" \
                "${CWD}/tools/statx/bin/statx"
            STATX_TOOL_AVAILABLE=true
        elif run_command "\"${CWD}/tools/statx/bin/linux/statx_armhf\" \"${MOUNT_POINT}\"" "/dev/null"; then
            ln -s "${CWD}/tools/statx/bin/linux/statx_armhf" \
                "${CWD}/tools/statx/bin/statx"
            STATX_TOOL_AVAILABLE=true
        elif run_command "\"${CWD}/tools/statx/bin/linux/statx_mips64\" \"${MOUNT_POINT}\"" "/dev/null"; then
            ln -s "${CWD}/tools/statx/bin/linux/statx_mips64" \
                "${CWD}/tools/statx/bin/statx"
            STATX_TOOL_AVAILABLE=true
        elif run_command "\"${CWD}/tools/statx/bin/linux/statx_mips64el\" \"${MOUNT_POINT}\"" "/dev/null"; then
            ln -s "${CWD}/tools/statx/bin/linux/statx_mips64el" \
                "${CWD}/tools/statx/bin/statx"
            STATX_TOOL_AVAILABLE=true
        elif run_command "\"${CWD}/tools/statx/bin/linux/statx_mips\" \"${MOUNT_POINT}\"" "/dev/null"; then
            ln -s "${CWD}/tools/statx/bin/linux/statx_mips" \
                "${CWD}/tools/statx/bin/statx"
            STATX_TOOL_AVAILABLE=true
        elif run_command "\"${CWD}/tools/statx/bin/linux/statx_powerpc64\" \"${MOUNT_POINT}\"" "/dev/null"; then
            ln -s "${CWD}/tools/statx/bin/linux/statx_powerpc64" \
                "${CWD}/tools/statx/bin/statx"
            STATX_TOOL_AVAILABLE=true
        elif run_command "\"${CWD}/tools/statx/bin/linux/statx_powerpc64le\" \"${MOUNT_POINT}\"" "/dev/null"; then
            ln -s "${CWD}/tools/statx/bin/linux/statx_powerpc64le" \
                "${CWD}/tools/statx/bin/statx"
            STATX_TOOL_AVAILABLE=true
        elif run_command "\"${CWD}/tools/statx/bin/linux/statx_powerpc\" \"${MOUNT_POINT}\"" "/dev/null"; then
            ln -s "${CWD}/tools/statx/bin/linux/statx_powerpc" \
                "${CWD}/tools/statx/bin/statx"
            STATX_TOOL_AVAILABLE=true
        elif run_command "\"${CWD}/tools/statx/bin/linux/statx_s390x\" \"${MOUNT_POINT}\"" "/dev/null"; then
            ln -s "${CWD}/tools/statx/bin/linux/statx_s390x" \
                "${CWD}/tools/statx/bin/statx"
            STATX_TOOL_AVAILABLE=true
        elif run_command "\"${CWD}/tools/statx/bin/linux/statx_sparc64\" \"${MOUNT_POINT}\"" "/dev/null"; then
            ln -s "${CWD}/tools/statx/bin/linux/statx_sparc64" \
                "${CWD}/tools/statx/bin/statx"
            STATX_TOOL_AVAILABLE=true
        fi
        logging D "STATX_TOOL_AVAILABLE: $STATX_TOOL_AVAILABLE\n"
    fi

    # check if file is available
    FILE_TOOL=""
    logging D "Checking if file is available\n"
    run_command "file \"$CWD/uac\"" "/dev/null"
    if [ $? -eq 0 ]; then
        FILE_TOOL="file"
    fi
    logging D "FILE_TOOL: $FILE_TOOL\n"

    # check which options are supported by find tool
    FIND_OPERATORS_SUPPORT=true
    FIND_PATH_SUPPORT=true
    FIND_SIZE_SUPPORT=true
    FIND_MAXDEPTH_SUPPORT=true
    FIND_PERM_SUPPORT=true
    FIND_ATIME_SUPPORT=true
    FIND_MTIME_SUPPORT=true
    FIND_CTIME_SUPPORT=true

    logging D "Checking if find supports operators\n"
    run_command "find \"$CWD\" \( -name \"uac\" -o -name \"uac\" \) -type f -print" "/dev/null"
    if [ ! $? -eq 0 ]; then
        FIND_OPERATORS_SUPPORT=false
    fi
    logging D "FIND_OPERATORS_SUPPORT: $FIND_OPERATORS_SUPPORT\n"

    logging D "Checking if find supports -path\n"
    run_command "find \"$CWD\" -path \"$CWD\" -print" "/dev/null"
    if [ ! $? -eq 0 ]; then
        FIND_PATH_SUPPORT=false
    fi
    logging D "FIND_PATH_SUPPORT: $FIND_PATH_SUPPORT\n"

    logging D "Checking if find supports -size\n"
    run_command "find \"$CWD/uac\" -size +1c -print" "/dev/null"
    if [ ! $? -eq 0 ]; then
        FIND_SIZE_SUPPORT=false
    fi
    logging D "FIND_SIZE_SUPPORT: $FIND_SIZE_SUPPORT\n"
    
    logging D "Checking if find supports -maxdepth\n"
    run_command "find \"$CWD/uac\" -maxdepth 1 -print" "/dev/null"
    if [ ! $? -eq 0 ]; then
        FIND_MAXDEPTH_SUPPORT=false
    fi
    logging D "FIND_MAXDEPTH_SUPPORT: $FIND_MAXDEPTH_SUPPORT\n"

    logging D "Checking if find supports -perm\n"
    run_command "find \"$CWD/uac\" -perm -0000 -print" "/dev/null"
    if [ ! $? -eq 0 ]; then
        FIND_PERM_SUPPORT=false
    fi
    logging D "FIND_PERM_SUPPORT: $FIND_PERM_SUPPORT\n"

    logging D "Checking if find supports -atime\n"
    run_command "find \"$CWD/uac\" -atime +1 -print" "/dev/null"
    if [ ! $? -eq 0 ]; then
        FIND_ATIME_SUPPORT=false
    fi
    logging D "FIND_ATIME_SUPPORT: $FIND_ATIME_SUPPORT\n"

    logging D "Checking if find supports -mtime\n"
    run_command "find \"$CWD/uac\" -mtime +1 -print" "/dev/null"
    if [ ! $? -eq 0 ]; then
        FIND_MTIME_SUPPORT=false
    fi
    logging D "FIND_MTIME_SUPPORT: $FIND_MTIME_SUPPORT\n"

    logging D "Checking if find supports -ctime\n"
    run_command "find \"$CWD/uac\" -ctime +1 -print" "/dev/null"
    if [ ! $? -eq 0 ]; then
        FIND_CTIME_SUPPORT=false
    fi
    logging D "FIND_CTIME_SUPPORT: $FIND_CTIME_SUPPORT\n"

    # check if fls is available
    FLS_TOOL=""
    logging D "Checking if fls tool is available\n"
    run_command "fls -V" "/dev/null"
    if [ $? -eq 0 ]; then
        FLS_TOOL="fls"
    fi
    logging D "FLS_TOOL: $FLS_TOOL\n"

    # check if procstat is available
    PROCSTAT_TOOL=""
    logging D "Checking if procstat tool is available\n"
    run_command "procstat $$" "/dev/null"
    if [ $? -eq 0 ]; then
        PROCSTAT_TOOL="procstat"
    fi
    logging D "PROCSTAT_TOOL: $PROCSTAT_TOOL\n"

    # check if strings is available
    STRINGS_TOOL=""
    logging D "Checking if strings tool is available\n"
    run_command "strings \"$CWD/uac\"" "/dev/null"
    if [ $? -eq 0 ]; then
        STRINGS_TOOL="strings"
    fi
    logging D "STRINGS_TOOL: $STRINGS_TOOL\n"

}
