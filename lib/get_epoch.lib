# Copyright (C) 2019,2020 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the “License”);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

################################################################################
# NAME
#   get_epoch - get current or epoch timestamp for the given date
# SYNOPSIS
#   get_epoch [YYYY-MM-DD]
# RETURN VALUE
#   epoch timestamp
################################################################################
get_epoch() {
    if [ "$1" ]; then
        # date format as YYYY-MM-DD (GNU date)
        date -d "$1" "+%s" 2>/dev/null
        if [ ! $? -eq 0 ]; then
            # date format as YYYY-MM-DD (BSD date)
            date -j -f "%Y-%m-%d" "$1" "+%s" 2>/dev/null
            if [ ! $? -eq 0 ]; then
                # date format as MMDDhhmmYYYY (old busybox date)
                DATE_YEAR=`echo "$1" | cut -d"-" -f 1`
                DATE_MONTH=`echo "$1" | cut -d"-" -f 2`
                DATE_DAY=`echo "$1" | cut -d"-" -f 3`
                date -d "${DATE_MONTH}${DATE_DAY}0000${DATE_YEAR}" "+%s" 2>/dev/null
                if [ ! $? -eq 0 ]; then
                    perl "$CWD/tools/date_to_epoch/date_to_epoch.pl" "$1" 2>/dev/null
                fi
            fi
        fi
    else
        if [ ! -z "$PERL_TOOL" ]; then
            perl -e 'print time' 2>/dev/null
        else
            date "+%s" 2>/dev/null
        fi
    fi
}