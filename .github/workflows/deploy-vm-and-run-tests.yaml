name: Deploy VM and Run Tests

on:
  workflow_call:
    inputs:
      runs_on:
        required: true
        type: string
      unit_test_operating_system:
        required: true
        type: string
      unit_test_system_arch:
        required: true
        type: string
      unit_test_hostname:
        required: true
        type: string
      uac_destination_dir:
        required: true
        type: string
      vagrant_box_name:
        required: true
        type: string
      vagrant_ssh_username:
        required: true
        type: string
      vagrant_ssh_password:
        required: true
        type: string
      vagrant_ssh_shell:
        required: true
        type: string

jobs:
  run-tests:
    runs-on: ${{ inputs.runs_on }}

    steps:
      - name: Clone uac repo
        uses: actions/checkout@v3
        with:
          path: uac

      - name: Create testing profile
        run: |
          printf %b "name: test\ndescription: test\nartifacts:\n  - live_response/process/ps.yaml\n  - live_response/storage/*\n  - !live_response/storage/fs_usage.yaml" >uac/profiles/test.yaml

      - name: Clone uac-unit-test repo
        uses: actions/checkout@v3
        with:
          repository: tclahr/uac-unit-test
          path: uac-unit-test
          ref: main

      - uses: actions/cache@v3
        with:
          path: ~/.vagrant.d/boxes
          key: ${{ runner.os }}-vagrant-${{ inputs.vagrant_box_name }}
          restore-keys: |
            ${{ runner.os }}-vagrant-${{ inputs.vagrant_box_name }}

      - name: Create Vagrantfile
        run: |
          cat << EOF >Vagrantfile
          Vagrant.configure("2") do |config|
            config.vm.box = "${{ inputs.vagrant_box_name }}"
            config.ssh.username = "${{ inputs.vagrant_ssh_username }}"
            config.ssh.shell = "${{ inputs.vagrant_ssh_shell }}"
            config.ssh.insert_key = false
            config.ssh.extra_args = [
              "-oKexAlgorithms=+diffie-hellman-group1-sha1",
              "-oPubkeyAcceptedKeyTypes=+ssh-rsa",
              "-oHostKeyAlgorithms=+ssh-rsa"
            ]
            config.vm.provider "virtualbox" do |vb|
              vb.customize ["modifyvm", :id, "--memory", "2048"]
              vb.customize ["modifyvm", :id, "--cpus", "2"]
              vb.customize ["modifyvm", :id, "--usb", "off"]
              vb.customize ["modifyvm", :id, "--usbehci", "off"]
            end
            config.vm.synced_folder '.', '/vagrant', disabled: true
          EOF

      - name: Update Vagrantfile
        if: ${{ inputs.vagrant_ssh_password != '' }}
        run: |
          cat << EOF >>Vagrantfile
            config.ssh.password = "${{ inputs.vagrant_ssh_password }}"
          EOF

      - name: Close Vagrantfile
        run: |
          cat << EOF >>Vagrantfile
          end
          EOF

      - name: Print Vagrantfile
        run: cat Vagrantfile

      - name: Print host CPU count
        run: sysctl hw.ncpu

      - name: Print host memory size
        run: sysctl hw.memsize

      - name: Start ${{ inputs.vagrant_box_name }} VM
        run: vagrant up --debug

      - name: Transfer uac to VM
        run: vagrant upload uac uac

      - name: Transfer uac-unit-test to VM
        run: vagrant upload uac-unit-test uac-unit-test

      - name: Run date
        run: vagrant ssh -c "date"

      - name: Run uname -a
        run: vagrant ssh -c "uname -a"

      - name: Run unit test
        run: vagrant ssh -c "cd uac-unit-test && ./run_test ../uac ${{ inputs.unit_test_operating_system }} ${{ inputs.unit_test_system_arch }} ${{ inputs.vagrant_ssh_username }} ${{ inputs.unit_test_hostname }} tests/*"

      - name: Run ./uac -p test --run-as-non-root ${{ inputs.uac_destination_dir }}
        run: vagrant ssh -c "cd uac && ./uac -p test --run-as-non-root ${{ inputs.uac_destination_dir }}"

      - name: Run ./uac -p test -a files/system/etc.yaml --run-as-non-root ${{ inputs.uac_destination_dir }}
        run: vagrant ssh -c "cd uac && ./uac -p test -a files/system/etc.yaml --run-as-non-root ${{ inputs.uac_destination_dir }}"

      - name: Run ./uac -a live_response/process/pstree.yaml -p test -a files/system/etc.yaml --run-as-non-root ${{ inputs.uac_destination_dir }}
        run: vagrant ssh -c "cd uac && ./uac -a live_response/process/pstree.yaml -p test -a files/system/etc.yaml --run-as-non-root ${{ inputs.uac_destination_dir }}"

      - name: Run ./uac -a live_response/process/ps.yaml --run-as-non-root ${{ inputs.uac_destination_dir }}
        run: vagrant ssh -c "cd uac && ./uac -a live_response/process/ps.yaml --run-as-non-root ${{ inputs.uac_destination_dir }}"

      - name: Run ./uac -a live_response/process/ps.yaml,live_response/network/arp.yaml --run-as-non-root ${{ inputs.uac_destination_dir }}
        run: vagrant ssh -c "cd uac && ./uac -a live_response/process/ps.yaml,live_response/network/arp.yaml --run-as-non-root ${{ inputs.uac_destination_dir }}"

      - name: Run ./uac -a live_response/process/\*,\!live_response/process/hash_running_processes.yaml -a \!live_response/process/procfs_information.yaml,\!live_response/process/strings_running_processes.yaml --run-as-non-root ${{ inputs.uac_destination_dir }}
        run: vagrant ssh -c "cd uac && ./uac -a live_response/process/\*,\!live_response/process/hash_running_processes.yaml -a \!live_response/process/procfs_information.yaml,\!live_response/process/strings_running_processes.yaml --run-as-non-root ${{ inputs.uac_destination_dir }}"

      - name: Run ./uac -a files/logs/var_log.yaml --run-as-non-root --date-range-start 1985-10-26 ${{ inputs.uac_destination_dir }}
        run: vagrant ssh -c "cd uac && ./uac -a files/logs/var_log.yaml --run-as-non-root --date-range-start 1985-10-26 ${{ inputs.uac_destination_dir }}"

      - name: Run ./uac -a files/logs/var_log.yaml --run-as-non-root --date-range-start 1985-10-26 --date-range-end 1985-10-30 ${{ inputs.uac_destination_dir }}
        run: vagrant ssh -c "cd uac && ./uac -a files/logs/var_log.yaml --run-as-non-root --date-range-start 1985-10-26 --date-range-end 1985-10-30 ${{ inputs.uac_destination_dir }}"

      - name: Run ./uac -a live_response/process/ps.yaml --run-as-non-root --hostname uac-test-vm ${{ inputs.uac_destination_dir }}
        run: vagrant ssh -c "cd uac && ./uac -a live_response/process/ps.yaml --run-as-non-root --hostname uac-test-vm ${{ inputs.uac_destination_dir }}"

      - name: Run ./uac -a live_response/process/ps.yaml --run-as-non-root --case-number 12345 --description "Case Description" --evidence-number 10 --examiner "Examiner Name" --notes "Case Notes" ${{ inputs.uac_destination_dir }}
        run: vagrant ssh -c "cd uac && ./uac -a live_response/process/ps.yaml --run-as-non-root --case-number 12345 --description \"Case Description\" --evidence-number 10 --examiner \"Examiner Name\" --notes \"Case Notes\" ${{ inputs.uac_destination_dir }}"

      - name: run ./uac -a live_response/process/ps.yaml --run-as-non-root ${{ inputs.uac_destination_dir }}
        run: vagrant ssh -c "cd uac && ./uac -a live_response/process/ps.yaml --run-as-non-root ${{ inputs.uac_destination_dir }}"

      - name: rm -f gzip /bin/gzip /usr/bin/gzip
        run: vagrant ssh -c "rm -f /bin/gzip /usr/bin/gzip || true"

      - name: sudo rm -f /bin/gzip /usr/bin/gzip
        run: vagrant ssh -c "sudo rm -f /bin/gzip /usr/bin/gzip || true"
      
      - name: (no gzip) run ./uac -a live_response/process/ps.yaml --run-as-non-root ${{ inputs.uac_destination_dir }}
        run: vagrant ssh -c "cd uac && ./uac -a live_response/process/ps.yaml --run-as-non-root ${{ inputs.uac_destination_dir }}"

      - name: rm -f /bin/tar /usr/bin/tar
        run: vagrant ssh -c "rm -f /bin/tar /usr/bin/tar || true"

      - name: sudo rm -f /bin/tar /usr/bin/tar
        run: vagrant ssh -c "sudo rm -f /bin/tar /usr/bin/tar || true"

      - name: (no tar) run ./uac -a live_response/process/ps.yaml --run-as-non-root ${{ inputs.uac_destination_dir }}
        run: vagrant ssh -c "cd uac && ./uac -a live_response/process/ps.yaml --run-as-non-root ${{ inputs.uac_destination_dir }}"

      - name: Run ./uac --validate-artifacts-file ./artifacts/live_response/process/ps.yaml
        run: vagrant ssh -c "cd uac && ./uac --validate-artifacts-file ./artifacts/live_response/process/ps.yaml"
