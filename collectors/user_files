# Copyright (C) 2019,2020 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the “License”);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# user_files collector

logging I ">> Searching and collecting user files\n"

# get the list of home directories
ETC_PASSWD=`sanitize_path "$MOUNT_POINT/etc/passwd"`
run_command "cat \"$ETC_PASSWD\" | grep -v \"^#\" | grep -v \"^$\" | cut -d\":\" -f6 | sort | uniq" "$COLLECTOR_OUTPUT_DIR/home_directories.txt"

if [ "$PROFILE" = "macos" ]; then
    USERS_DIR=`sanitize_path "$MOUNT_POINT/Users"`
    run_command "ufind \"$USERS_DIR\" \"1\" \"\" \"\" \"d\" " "$COLLECTOR_OUTPUT_DIR/home_directories.txt"
fi

if [ -s "$COLLECTOR_OUTPUT_DIR/home_directories.txt" ]; then
    
    # cannot use a "while read USER_HOME_DIR; do ... ; done < $COLLECTOR_OUTPUT_DIR/home_directories.txt" loop here because it does not work properly with Ctrl+C
    cat "$COLLECTOR_OUTPUT_DIR/home_directories.txt" | while read USER_HOME_DIR; do
        USER_HOME_DIR=`sanitize_path "$MOUNT_POINT/$USER_HOME_DIR"`
        logging D "Collecting user files from $USER_HOME_DIR\n"

        # if home dir is / (like in some systems where root home dir is /)
        # uac will limit the search by setting the -maxdepth to 2
        FIND_MAXDEPTH_PARAMETER="$USER_FILES_MAX_DEPTH"
        if [ "$USER_HOME_DIR" = "/" ]; then
            FIND_MAXDEPTH_PARAMETER="2"
        fi

        # exclude paths
        run_command "cat \"$CWD/conf/exclude.conf\" | grep -v \"^#\" | grep -v \"^$\" | grep \"^/\" | sed 's:^/:'\"$MOUNT_POINT\"'/:; s://*:/:g; s:/$::g'" "$COLLECTOR_OUTPUT_DIR/.exclude.tmp"
        run_command "cat \"$CWD/conf/exclude.conf\" | grep -v \"^#\" | grep -v \"^$\" | grep \"^/\" | sed 's:^/:'\"$USER_HOME_DIR\"'/:; s://*:/:g; s:/$::g'" "$COLLECTOR_OUTPUT_DIR/.exclude.tmp"
        # exclude names
        run_command "cat \"$CWD/conf/exclude.conf\" | grep -v \"^#\" | grep -v \"^$\" | grep -v \"^/\"" "$COLLECTOR_OUTPUT_DIR/.exclude.tmp"
        # exclude network mounted file systems
        $EXCLUDE_MOUNTED_REMOTE_FILE_SYSTEMS && run_command "get_mount_points_to_exclude" "$COLLECTOR_OUTPUT_DIR/.exclude.tmp"
        if [ -s "$COLLECTOR_OUTPUT_DIR/.exclude.tmp" ]; then
            logging D "File Systems excluded from collection:\n"
            cat "$COLLECTOR_OUTPUT_DIR/.exclude.tmp" >>"$UAC_LOG_FILE"
        fi

        # first we need to search for directories which names were added to conf/user_files.conf
        run_command "ufind \"$USER_HOME_DIR\" \"$FIND_MAXDEPTH_PARAMETER\" \"$COLLECTOR_OUTPUT_DIR/.exclude.tmp\" \"$CWD/conf/user_files.conf\" \"d\" \"\" " "$COLLECTOR_OUTPUT_DIR/.directories.tmp"
        # merge the paths added to conf/user_files.conf with the ones found above
        run_command "cat \"$CWD/conf/user_files.conf\" | grep -v \"^#\" | grep -v \"^$\" | grep \"^/\" | sed 's:^/:'\"$USER_HOME_DIR\"'/:; s://*:/:g; s:/$::g'" "$COLLECTOR_OUTPUT_DIR/.directories.tmp"
        # sort and uniq
        run_command "cat \"$COLLECTOR_OUTPUT_DIR/.directories.tmp\" | sort | uniq" "$COLLECTOR_OUTPUT_DIR/.directories_sort_uniq.tmp"
        # search paths
        run_command "cat \"$COLLECTOR_OUTPUT_DIR/.directories_sort_uniq.tmp\" | while read line; do ufind \"\$line\" \"$FIND_MAXDEPTH_PARAMETER\" \"$COLLECTOR_OUTPUT_DIR/.exclude.tmp\" \"\" \"f\" \"$USER_FILES_MAX_FILE_SIZE\" \"$DATE_RANGE_T1\" \"$DATE_RANGE_T2\"; done " "$COLLECTOR_OUTPUT_DIR/.user_files.tmp"

        # search for file names
        run_command "ufind \"$USER_HOME_DIR\" \"$FIND_MAXDEPTH_PARAMETER\" \"$COLLECTOR_OUTPUT_DIR/.exclude.tmp\" \"$CWD/conf/user_files.conf\" \"f\" \"$USER_FILES_MAX_FILE_SIZE\" \"$DATE_RANGE_T1\" \"$DATE_RANGE_T2\"" "$COLLECTOR_OUTPUT_DIR/.user_files.tmp"

        # remove UAC working directory from the collection, sort and uniq
        run_command "cat \"$COLLECTOR_OUTPUT_DIR/.user_files.tmp\" | grep -v \"$CWD\" | sort | uniq" "$COLLECTOR_OUTPUT_DIR/user_files.txt"

        # remove temporary files
        run_command "rm -f \"$COLLECTOR_OUTPUT_DIR/.exclude.tmp\"" "/dev/null"
        run_command "rm -f \"$COLLECTOR_OUTPUT_DIR/.directories.tmp\"" "/dev/null"
        run_command "rm -f \"$COLLECTOR_OUTPUT_DIR/.directories_sort_uniq.tmp\"" "/dev/null"
        run_command "rm -f \"$COLLECTOR_OUTPUT_DIR/.user_files.tmp\"" "/dev/null"
        
    done

    # remove temporary files
    run_command "rm -f \"$COLLECTOR_OUTPUT_DIR/home_directories.txt\"" "/dev/null"

    if ${TAR_TOOL_AVAILABLE} && ${GZIP_TOOL_AVAILABLE}; then
        # archive and compress data
        run_command "archive_compress_data \"$COLLECTOR_OUTPUT_DIR/user_files.txt\" \"$COLLECTOR_OUTPUT_DIR/user_files.tar.gz\" true"
    elif ${TAR_TOOL_AVAILABLE}; then
        # archive data
        run_command "archive_data \"$COLLECTOR_OUTPUT_DIR/user_files.txt\" \"$COLLECTOR_OUTPUT_DIR/user_files.tar\" true"
    else
        # just copy data
        run_command "copy_data \"$COLLECTOR_OUTPUT_DIR/user_files.txt\" \"$COLLECTOR_OUTPUT_DIR\""
    fi

fi
