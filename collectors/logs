# Copyright (C) 2019,2020 IBM Corporation
#
# Licensed under the Apache License, Version 2.0 (the “License”);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an “AS IS” BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# logs collector

# exclude paths
run_command "cat \"$CWD/conf/exclude.conf\" | grep -v \"^#\" | grep -v \"^$\" | grep \"^/\" | sed 's:^/:'\"$MOUNT_POINT\"'/:; s://*:/:g; s:/$::g'" "$COLLECTOR_OUTPUT_DIR/.exclude.tmp"
# exclude names
run_command "cat \"$CWD/conf/exclude.conf\" | grep -v \"^#\" | grep -v \"^$\" | grep -v \"^/\"" "$COLLECTOR_OUTPUT_DIR/.exclude.tmp"
run_command "cat \"$CWD/conf/exclude.conf\" | grep -v \"^#\" | grep -v \"^$\" | grep -v \"^/\"" "$COLLECTOR_OUTPUT_DIR/.exclude_names.tmp"
# exclude mounted network file systems
$EXCLUDE_MOUNTED_REMOTE_FILE_SYSTEMS && run_command "get_mount_points_to_exclude" "$COLLECTOR_OUTPUT_DIR/.exclude.tmp"

# first we need to search for directories which names were added to conf/logs.conf
run_command "ufind \"$MOUNT_POINT\" \"$LOGS_MAX_DEPTH\" \"$COLLECTOR_OUTPUT_DIR/.exclude.tmp\" \"$CWD/conf/logs.conf\" \"d\" \"0\" " "$COLLECTOR_OUTPUT_DIR/.directories.tmp"
# merge the paths added to conf/logs.conf with the ones found above
run_command "cat \"$CWD/conf/logs.conf\" | grep -v \"^#\" | grep -v \"^$\" | grep \"^/\" | sed 's:^/:'\"$MOUNT_POINT\"'/:; s://*:/:g; s:/$::g'" "$COLLECTOR_OUTPUT_DIR/.directories.tmp"
# sort and uniq
run_command "cat \"$COLLECTOR_OUTPUT_DIR/.directories.tmp\" | sort | uniq" "$COLLECTOR_OUTPUT_DIR/.directories_sort_uniq.tmp"
# search paths
run_command "cat \"$COLLECTOR_OUTPUT_DIR/.directories_sort_uniq.tmp\" | while read line; do ufind \"\$line\" \"$LOGS_MAX_DEPTH\" \"$COLLECTOR_OUTPUT_DIR/.exclude_names.tmp\" \"\" \"f\" \"$LOGS_MAX_FILE_SIZE\" \"$DATE_RANGE_T1\" \"$DATE_RANGE_T2\"; done " "$COLLECTOR_OUTPUT_DIR/.logs.tmp"

# search for file names
run_command "ufind \"$MOUNT_POINT\" \"$LOGS_MAX_DEPTH\" \"$COLLECTOR_OUTPUT_DIR/.exclude.tmp\" \"$CWD/conf/logs.conf\" \"f\" \"$LOGS_MAX_FILE_SIZE\" \"$DATE_RANGE_T1\" \"$DATE_RANGE_T2\"" "$COLLECTOR_OUTPUT_DIR/.logs.tmp"

# remove UAC working directory from the collection, sort and uniq
run_command "cat \"$COLLECTOR_OUTPUT_DIR/.logs.tmp\" | grep -v \"$CWD\" | sort | uniq" "$COLLECTOR_OUTPUT_DIR/logs.txt"

# remove temporary files
run_command "rm -f \"$COLLECTOR_OUTPUT_DIR/.exclude.tmp\"" "/dev/null"
run_command "rm -f \"$COLLECTOR_OUTPUT_DIR/.exclude_names.tmp\"" "/dev/null"
run_command "rm -f \"$COLLECTOR_OUTPUT_DIR/.directories.tmp\"" "/dev/null"
run_command "rm -f \"$COLLECTOR_OUTPUT_DIR/.directories_sort_uniq.tmp\"" "/dev/null"
run_command "rm -f \"$COLLECTOR_OUTPUT_DIR/.logs.tmp\"" "/dev/null"

# compress data
run_command "compress_data \"$COLLECTOR_OUTPUT_DIR/logs.txt\" \"$COLLECTOR_OUTPUT_DIR/logs.tar.$COMPRESS_EXT\" \"$UAC_LOG_FILE\""

# docker logs
LOCAL_DOCKER_CONTAINER_LOGS_SINCE=""
LOCAL_DOCKER_CONTAINER_LOGS_UNTIL=""
if [ ! -z "$DATE_T1" ]; then
    LOCAL_DOCKER_CONTAINER_LOGS_SINCE="--since $DATE_T1"
    if [ ! -z "$DATE_T2" ]; then
        LOCAL_DOCKER_CONTAINER_LOGS_UNTIL="--until $DATE_T2"
    fi
fi
run_command "docker container ps -all | sed 1d | cut -d\" \" -f 1 | while read line; do docker container logs --timestamps $LOCAL_DOCKER_CONTAINER_LOGS_SINCE $LOCAL_DOCKER_CONTAINER_LOGS_UNTIL \$line | $COMPRESS_TOOL > \"$COLLECTOR_OUTPUT_DIR/docker-container-logs-\$line.$COMPRESS_EXT\"; done" "/dev/null"
